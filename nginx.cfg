# Do not daemonize - this makes it easier to test
# new configurations as any stupid error would be
# more easily caught when developing.
daemon off;

events {
        worker_connections              1024;
}

error_log logs/log debug;

http {

        # Explicitly telling what mime types we're
        # supporting just for the sake of explicitiness
        types {
                image/svg+xml           svg svgz;
                text/html               html;
        }

        # Add an upstream server to proxy requests to
        upstream sample-http1 {
                server localhost:8080;
        }

        server {
                # Listen on port 8443 with http2 support on.
                listen                  8443 http2;


                # Enable TLS such that we can have proper HTTP2
                # support using browsers
                ssl on;
                ssl_certificate         certs/cert_example.com.pem;
                ssl_certificate_key     certs/key_example.com.pem;

                # Enable support for using `Link` headers to indicate
                # origin server push
                http2_push_preload on;


                # For the root location (`index.html`) we perform
                # a server push of `/image.svg` when serving the
                # content to the end user.
                location / {
                        root            www;
                        http2_push      "/image.svg";
                }


                # When pushing the asset (`image.svg`) there's no need
                # to push additional resurces.
                location /image.svg {
                        root            www;
                }

                # Act as a reverse proxy for requests going to /proxy/*.
                # Because we don't want to rewrite our endpoints in the
                # Go app, rewrite the path such that `/proxy/lol` ends up
                # as `/lol`.
                location /proxy/ {
                        rewrite         /proxy/(.*) /$1 break;
                        proxy_pass      http://sample-http1;
                }
        }
}

